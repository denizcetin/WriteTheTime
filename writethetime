#!/bin/bash

# Zaman Bilgisini "Saat:Dakika" şeklinde alıp değişkenlere ataması yapılıyor.
tarih=`date +"%T" | awk -F ":" '{print $1":"$2}'`
saat=`echo $tarih | awk -F ":" '{print $1}'`
dakika=`echo $tarih | awk -F ":" '{print $2}'`

# Saat Denemeleri Yapacağında Aşağıdaki İki Yorum Satırını Kaldır ve Saati gir
#saat=23
#dakika=37

# Sistem Saati (Sayıyla) Ekrana Yazdırılıyor.
echo "Sistem Saati => ${saat}:${dakika}"

# Gönderilen Sayının Önündeki Sıfırlarını atan fonksiyon
# Parametre olarak saat veya dakika alır.
function sifiriniAt {
	echo "$((10#$1))"
}

# Sayı mı değil mi test eden fonksiyon
# Parametre olarak saat alır.
# Gelen parametre sayi ise bir "1" sayı değilse "0" döndürür
function sayiMi {
	yournumber="$1"
	# sayı için doku
	re='^[0-9]+$'
	if ! [[ $yournumber =~ $re ]] ; then
		return 0
	else
		return 1
	fi
}

# Gelen Parametreler için Saat'in ve Dakika'nın geçerliliğini (aralıklarını) test eder.
# İkisi de geçerliyse bir "1" değilse sıfır "0" döndürür.
# Parametre olarak saat ve dakika alır.
function saatDakikaKontrol {
	local saat=$1
	local dakika=$2
	
	# return_for_sayiMi_saat değişkeni sayiMi fonksiyonunun saat parametresi yani $1 için alan return değerini tutar 
	sayiMi $saat ; return_for_sayiMi_saat=$?
	
	# return_for_sayiMi_dakika değişkeni sayiMi fonksiyonunun dakika parametresi yani $2 için alan return değerini tutar	
	sayiMi $dakika ; return_for_sayiMi_dakika=$?
	
	if [[ "$return_for_sayiMi_saat" -eq 1 && "$return_for_sayiMi_dakika" -eq 1 ]] ; then
		# sayı olduğunu doğrulamadan sıfırlarını atmaya çalışma
		#sıfırları attıktan sonra değerlerini local değişkenlere ata
		local saat=$(sifiriniAt $saat)
		local dakika=$(sifiriniAt $dakika)
		if [[ "$saat" -ge 0 && "$saat" -le 23 && "$dakika" -ge 0 && "$dakika" -le 59 ]] ; then
			return 1
		else
			return 0
		fi
	else
		return 0
	fi
}
	
# Öğlen Akşam İkindi Sabah Gece gibi kavramları hesaplayan fonksiyon
function gunHesapla {
	case "$1" in
		0)
			echo "(Gece yarısı)" ;;
		1|2|3|4)
			echo "(Gece)" ;;
		5|6|7|8|9)
			echo "(Sabah)" ;;
		10|11)
			echo "(Öğleden Önce)" ;;
		12|13)
			echo "(Öğleyin)" ;;
		14|15)
			echo "(İkindi)" ;;
		16|17|18|19)
			echo "(Akşamüstü)" ;;
		20|21|22|23)
			echo "(Akşam)" ;;
	esac
}

# Saat bişey'i bişey geçiyor larda ki sayılara gelecek ekleri hesaplayan fonksiyon
# Parametre olarak saat alır.
function geceEkiniHesapla {
	case "$1" in
		1|5|8|11|13|17|20|23)
			geceEki="'i" ;;
		2|7|12|14|19|0)
			geceEki="'yi" ;;
		6|18)
			geceEki="'yı" ;;
		3|4|15|16)
			geceEki="'ü" ;;
		9|10|21|22)
			geceEki="'u" ;;
	esac
	echo "$geceEki"
}

# Saat bişey'e bişey var larda ki sayılara gelecek ekleri hesaplayan fonksiyon
# Parametre olarak saat alır.
function kalaEkiniHesapla {
	case "$1" in
		1|3|4|5|8|11|13|15|16|17|20|23)
			kalaEki="'e" ;;
		2|7|12|14|19|0)
			kalaEki="'ye" ;;
		6|18)
			kalaEki="'ya" ;;
		9|10|21|22)
			kalaEki="'a" ;;
	esac
	echo "$kalaEki"
}

# Saati yazıya çeviren fonksiyon
# Parametre olarak saat alır.
function saatiYaziyaCevir {
	array=("Bir" "İki" "Üç" "Dört" "Beş" "Altı" "Yedi" "Sekiz" "Dokuz" "On" "On Bir" "On İki")
	indis=$(($1 % 12))
	indis=$[$indis-1]
	saatyazi=${array[$indis]}
	echo "$saatyazi"
}


# Saati Yaklaşık Olarak Hesaplayan Fonksiyon
function yaklasikSaat {
	# Saati sıfırlardan arındır ve saaty değişkenine ata
	# Önemli Not ! $saat değişkenin orjinali bozulmuyor
	local saat=$(sifiriniAt $1)
	local dakika=$(sifiriniAt $2)
	if [[ "$dakika" -ge 0 && "$dakika" -le 3 ]] ; then
		onek="Tam"
	elif [[ "$dakika" -ge 4 && "$dakika" -le 26 ]] ; then
		ek=$(geceEkiniHesapla $saat)
	elif [[ "$dakika" -ge 27 && "$dakika" -le 33 ]] ; then
		ek=" Buçuk"
	elif [[ "$dakika" -ge 34 && "$dakika" -le 56 ]] ; then
		saat=$[$saat + 1]
		ek="$(kalaEkiniHesapla $saat)"
		if [ "$saat" -eq 24 ] ; then
			saat=0
		fi
	fi
	echo "$(gunHesapla $saat) ${onek} $(saatiYaziyaCevir $saat)${ek}"
}

# Saati Tam Değeriyle Yazıyla Yazan Fonksiyon
# Parametre olarak saat alır.
function normalSaat {
	local saat=$(sifiriniAt $saat)
	ek=$(geceEkiniHesapla $saat)
	gun=$(gunHesapla $saat)
	
	# Saati Yazıya Çevirdik
	saat=$(saatiYaziyaCevir $1)
	
	# Dakikanın İlk Hanesini Yazıya Çeviren Kısım
	case "${dakika:0:1}" in
		0)
			dakika1="Sıfır" ;;
		1)
			dakika1="On" ;;
		2)
			dakika1="Yirmi" ;;
		3)
			dakika1="Otuz" ;;
		4)
			dakika1="Kırk" ;;
		5)
			dakika1="Elli" ;;
		*)
			dakika1="" ;;
	esac

	# Dakikanın İkinci Hanesini Yazıya Çeviren Kısım
	case "${dakika:1:1}" in
		1)
			dakika2="Bir" ;;
		2)
			dakika2="İki" ;;
		3)
			dakika2="Üç" ;;
		4)
			dakika2="Dört" ;;
		5)
			dakika2="Beş" ;;
		6)
			dakika2="Altı" ;;
		7)
			dakika2="Yedi" ;;
		8)
			dakika2="Sekiz" ;;
		9)
			dakika2="Dokuz" ;;
		*)
			dakika2="" ;;
	esac
	
	echo "$saat$ek ${dakika1} ${dakika2} geçiyor."
}

# Bu case programa verilen parametre sayısı üzerinden işlem yapar.
# parametre yoksa normal saati yazıyla verir.
# parametre sayısı 1 "bir" ise ve parametre -y ise saati yaklaşık olarak verir.
# parametre sayısı 3 "üç" ise ve parametre -d saat dakika şeklinde (formatında) ise bu girilen saat dakika değerine göre işlem yapılır.
case "$#" in
	0)	# Parametre sayısı 0 "sıfır" ise (Parametre Yoksa)
		echo "Normal Saat"
			normalSaat $saat
		;;
	1) # Parametre sayısı 1 "bir" ise
		if [ "$1" = "-y" ] ; then
			# parametre "-y" ise
			echo "Yaklaşık Saat"
			yaklasikSaat $saat $dakika 
		else
			# parametre "-y" değilse
			echo "Hatalı Parametre Girdiniz"
			exit
		fi
		;;
	3) # Parametre sayısı 3 "üç" ise
		if [ "$1" = "-d" ] ; then
			# ilk parametre "-d" ise
			saatDakikaKontrol $2 $3
			return_for_saat_dakika_kontrol=$?
			if [ "$return_for_saat_dakika_kontrol" -eq 1 ] ; then
				echo "Girilen Saat - Dakika geçerli"
				echo "Deneysel Saat => ${2}:${3}"
				yaklasikSaat $2 $3
			else
				echo "Girilen Saat - Dakika geçerli değil"
				exit 1
			fi
		else  
			# ilk parametre "-d" değilse
			echo "Hatalı Parametre Girdiniz"
			exit
		fi
		;;
	*)
		echo "Hatalı Parametre Girdiniz"
		exit
		;;
esac

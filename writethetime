#!/bin/bash

# Zaman Bilgisini "Saat:Dakika" şeklinde alıp değişkenlere ataması yapılıyor.
tarih=`date +"%T" | awk -F ":" '{print $1":"$2}'`
saat=`echo $tarih | awk -F ":" '{print $1}'`
dakika=`echo $tarih | awk -F ":" '{print $2}'`

# Saat Denemeleri Yapacağında Aşağıdaki İki Yorum Satırını Kaldır ve Saati gir
saat=23
dakika=45

# Sistem Saati (Sayıyla) Ekrana Yazdırılıyor.
echo "Sistem Saati => ${saat}:${dakika}"

# Öğlen Akşam İkindi Sabah Gece gibi kavramları hesaplayan fonksiyon
function gunHesapla {
	if [ "${saat:0:1}" = "0" ] ; then
		case "${saat:1:1}" in
			0)
				gun="(Gece yarısı)" ;;
			1|2|3|4)
				gun="(Gece)" ;;
			5|6|7|8|9)
				gun="(Sabah)" ;;
		esac
	elif [ "${saat:0:1}" = "1" ] ; then
		case "${saat:1:1}" in
			0|1)
				gun="(Öğleden Önce)"  ;;
			2|3)
				gun="(Öğleyin)"  ;;
			4|5)
				gun="(İkindi)"  ;;
			6|7|8)
				gun="(Akşamüstü)" ;;
			9)
				gun="(Akşam)" ;;
		esac
	else
		gun="(Akşam)"
	fi
	echo "$gun"
}

# Saat bişey'i bişey geçiyor larda ki sayılara gelecek ekleri hesaplayan fonksiyon
# Parametre olarak saat alır.
function geceEkiniHesapla {
	case "$1" in
		1|5|8|11|13|17|20|23)
			geceEki="'i" ;;
		2|7|12|14|19|0)
			geceEki="'yi" ;;
		6|18)
			geceEki="'yı" ;;
		3|4|15|16)
			geceEki="'ü" ;;
		9|10|21|22)
			geceEki="'u" ;;
	esac
	echo "$geceEki"
}

# Saat bişey'e bişey var larda ki sayılara gelecek ekleri hesaplayan fonksiyon
# Parametre olarak saat alır.
function kalaEkiniHesapla {
	case "$1" in
		1|3|4|5|8|11|13|15|16|17|20|23)
			kalaEki="'e" ;;
		2|7|12|14|19|0)
			kalaEki="'ye" ;;
		6|18)
			kalaEki="'ya" ;;
		9|10|21|22)
			kalaEki="'a" ;;
	esac
	echo "$kalaEki"
}

# Saatin Sıfırlarını atan fonksiyon
# Parametre olarak saat alır.
function saatinSifiriniAt {
	echo "$((10#$1))"
}

# Saati yazıya çeviren fonksiyon
# Parametre olarak saat alır.
function saatiYaziyaCevir {
	case "$1" in
		1|13)
			saatyazi="Bir" ;;
		2|14)
			saatyazi="İki" ;;
		3|15)
			saatyazi="Üç" ;;
		4|16)
			saatyazi="Dört" ;;
		5|17)
			saatyazi="Beş" ;;
		6|18)
			saatyazi="Altı" ;;
		7|19)
			saatyazi="Yedi" ;;
		8|20)
			saatyazi="Sekiz" ;;
		9|21)
			saatyazi="Dokuz" ;;
		10|22)
			saatyazi="On" ;;
		11|23)
			saatyazi="On Bir" ;;
		12|0)
			saatyazi="On İki" ;;
		*)
			echo "Saat Bozuk"
			exit ;;
	esac
	echo "$saatyazi"
}

# Saati Yaklaşık Olarak Hesaplayan Fonksiyon
function yaklasikSaat {
	# Saati sıfırlardan arındır ve saaty değişkenine ata
	# Önemli Not ! $saat değişkenin orjinali bozulmuyor
	saaty=$(saatinSifiriniAt $saat)
	if [[ "$dakika" -ge 0 && "$dakika" -le 3 ]] ; then
		onek="Tam"
	elif [[ "$dakika" -ge 4 && "$dakika" -le 26 ]] ; then
		ek=$(geceEkiniHesapla $saaty)
	elif [[ "$dakika" -ge 27 && "$dakika" -le 33 ]] ; then
		ek=" Buçuk"
	elif [[ "$dakika" -ge 34 && "$dakika" -le 56 ]] ; then
		saaty=$[$saaty + 1]
		if [ "$saaty" -eq 24 ] ; then
			saaty=0
		fi
		ek="$(kalaEkiniHesapla $saaty)"
	fi
	echo "$(gunHesapla) ${onek} $(saatiYaziyaCevir $saaty)${ek}"
}

function normalSaat {
	# Saati Yazıya Çeviren Kısım
	case "$saat" in
		1|13)
			saat="Biri" ;;
		2|14)
			saat="İkiyi" ;;
		3|15)
			saat="Üçü" ;;
		4|16)
			saat="Dördü" ;;
		5|17)
			saat="Beşi" ;;
		6|18)
			saat="Altıyı" ;;
		7|19)
			saat="Yediyi" ;;
		8|20)
			saat="Sekizi" ;;
		9|21)
			saat="Dokuzu" ;;
		10|22)
			saat="Onu" ;;
		11|23)
			saat="On Biri" ;;
		12|00)
			saat="On İkiyi" ;;
		*)
			echo "Saat Bozuk" ;;
	esac

	# Dakikanın İlk Hanesini Yazıya Çeviren Kısım
	case "${dakika:0:1}" in
		0)
			dakika1="Sıfır" ;;
		1)
			dakika1="On" ;;
		2)
			dakika1="Yirmi" ;;
		3)
			dakika1="Otuz" ;;
		4)
			dakika1="Kırk" ;;
		5)
			dakika1="Elli" ;;
		*)
			dakika1="" ;;
	esac

	# Dakikanın İkinci Hanesini Yazıya Çeviren Kısım
	case "${dakika:1:1}" in
		1)
			dakika2="Bir" ;;
		2)
			dakika2="İki" ;;
		3)
			dakika2="Üç" ;;
		4)
			dakika2="Dört" ;;
		5)
			dakika2="Beş" ;;
		6)
			dakika2="Altı" ;;
		7)
			dakika2="Yedi" ;;
		8)
			dakika2="Sekiz" ;;
		9)
			dakika2="Dokuz" ;;
		*)
			dakika2="" ;;
	esac

	saat="$(gunHesapla) ${saat} ${dakika1} ${dakika2} geçiyor."

	echo "$saat"
}
# parametre yoksa normal saati yazıyla verir.
# -y parametresi eklenirse saati yaklaşık olarak verir.
# -d saat dakika parametresi eklenirse saati deneysel olarak girilen saate göre verir
# Bu case programa verilen parametre sayısı üzerinden işlem yapar.
case "$#" in
	0)	# Parametre sayısı 0 "sıfır" ise (Parametre Yoksa)
		echo "Normal Saat"
			normalSaat
		;;
	1) # Parametre sayısı 1 "bir" ise
		if [ "$1" = "-y" ] ; then
			# parametre "-y" ise
			echo "Yaklaşık Saat"
			yaklasikSaat $dakika $saat
		else
			# parametre "-y" değilse
			echo "Hatalı Parametre"
			exit
		fi
		;;
	3) # Parametre sayısı 3 "üç" ise
		if [ "$1" = "-d" ] ; then
			echo "İlk Parametre Doğru"
			densaat="$2"
			dendakika="$3"
			sayi=07
			echo $((10#$sayi))
		else  
			# ilk parametre "-d" değilse
			echo "Hatalı Parametre"
			exit
		fi

		if [[ "$2" -ge 0 && "$2" -le 23 ]] ; then
			echo "İkinci Parametre Doğru"
		fi
		;;
	*)
		echo "Fazla Parametre Girdiniz"
		exit
		;;
esac
